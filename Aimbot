-- Variables
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local localPlayer = Players.LocalPlayer
local camera = game.Workspace.CurrentCamera

local lockOn = false  -- Boolean to track if lock-on is active

-- Function to check if a player can attack the local player
local function canAttack(player)
    if player.Character and player.Character:FindFirstChild("CanAttackLocalPlayer") then
        return player.Character.CanAttackLocalPlayer.Value  -- Assuming it's a BoolValue
    end
    return false
end

-- Function to get the nearest player who can attack the local player
local function getNearestAttackingPlayer()
    local nearestPlayer = nil
    local shortestDistance = math.huge
    
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= localPlayer and canAttack(player) and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (player.Character.HumanoidRootPart.Position - localPlayer.Character.HumanoidRootPart.Position).Magnitude
            
            if distance < shortestDistance then
                shortestDistance = distance
                nearestPlayer = player
            end
        end
    end
    
    return nearestPlayer
end

-- Function to toggle lock-on with Shift + /
local function onInputBegan(input, gameProcessed)
    if gameProcessed then return end  -- Ignore if another action is using the key press
    
    -- Check if Shift + / is pressed
    if input.KeyCode == Enum.KeyCode.Slash and UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
        lockOn = not lockOn  -- Toggle lock-on state
    end
end

-- Lock the camera onto the nearest player who can attack if lock-on is active
RunService.RenderStepped:Connect(function()
    if lockOn then
        local nearestPlayer = getNearestAttackingPlayer()
        
        if nearestPlayer and nearestPlayer.Character and nearestPlayer.Character:FindFirstChild("HumanoidRootPart") then
            -- Set the camera's CFrame to look at the nearest player's HumanoidRootPart
            camera.CFrame = CFrame.new(camera.CFrame.Position, nearestPlayer.Character.HumanoidRootPart.Position)
        end
    end
end)

-- Listen for key inputs
UserInputService.InputBegan:Connect(onInputBegan)
